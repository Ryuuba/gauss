$date
	Thu Feb 02 01:14:37 2017
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module Testbench $end
$var wire 16 ! result [15:0] $end
$var wire 1 " done $end
$var reg 1 # clk $end
$var reg 16 $ data [15:0] $end
$var reg 1 % preset $end
$scope module proc $end
$var wire 1 # clk $end
$var wire 16 & data [15:0] $end
$var wire 1 % preset $end
$var wire 1 ' status $end
$var wire 16 ( result [15:0] $end
$var wire 1 " done $end
$var wire 4 ) ctrlword [3:0] $end
$scope module ctrl_u $end
$var wire 1 # clk $end
$var wire 4 * ctrlword [3:0] $end
$var wire 1 % preset $end
$var wire 1 ' status $end
$var wire 4 + nextstate [3:0] $end
$var reg 4 , state [3:0] $end
$upscope $end
$scope module datapath $end
$var wire 1 - clk $end
$var wire 4 . ctrlword [3:0] $end
$var wire 16 / data [15:0] $end
$var wire 16 0 result [15:0] $end
$var reg 16 1 acum [15:0] $end
$var reg 1 " done $end
$var reg 16 2 i [15:0] $end
$var reg 16 3 n [15:0] $end
$var reg 1 ' status $end
$scope begin genblk1[0] $end
$upscope $end
$scope begin genblk1[1] $end
$upscope $end
$scope begin genblk1[2] $end
$upscope $end
$scope begin genblk1[3] $end
$upscope $end
$scope begin genblk1[4] $end
$upscope $end
$scope begin genblk1[5] $end
$upscope $end
$scope begin genblk1[6] $end
$upscope $end
$scope begin genblk1[7] $end
$upscope $end
$scope begin genblk1[8] $end
$upscope $end
$scope begin genblk1[9] $end
$upscope $end
$scope begin genblk1[10] $end
$upscope $end
$scope begin genblk1[11] $end
$upscope $end
$scope begin genblk1[12] $end
$upscope $end
$scope begin genblk1[13] $end
$upscope $end
$scope begin genblk1[14] $end
$upscope $end
$scope begin genblk1[15] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 3
bx 2
bx 1
bx 0
b1010 /
bx .
1-
bx ,
bx +
bx *
bx )
bx (
x'
b1010 &
0%
b1010 $
0#
x"
bx !
$end
#5
1%
#10
bz !
bz (
bz 0
0'
0"
b1000 +
b1 )
b1 *
b1 .
b1 ,
0-
1#
#20
b10 +
1'
b1 2
b0 1
b1010 3
1-
0#
0%
#30
b100 +
b10 )
b10 *
b10 .
b10 ,
0-
1#
#40
b1 1
1-
0#
#50
b10 +
b100 )
b100 *
b100 .
b100 ,
0-
1#
#60
b10 2
1-
0#
#70
b100 +
b10 )
b10 *
b10 .
b10 ,
0-
1#
#80
b11 1
1-
0#
#90
b10 +
b100 )
b100 *
b100 .
b100 ,
0-
1#
#100
b11 2
1-
0#
#110
b100 +
b10 )
b10 *
b10 .
b10 ,
0-
1#
#120
b110 1
1-
0#
#130
b10 +
b100 )
b100 *
b100 .
b100 ,
0-
1#
#140
b100 2
1-
0#
#150
b100 +
b10 )
b10 *
b10 .
b10 ,
0-
1#
#160
b1010 1
1-
0#
#170
b10 +
b100 )
b100 *
b100 .
b100 ,
0-
1#
#180
b101 2
1-
0#
#190
b100 +
b10 )
b10 *
b10 .
b10 ,
0-
1#
#200
b1111 1
1-
0#
#210
b10 +
b100 )
b100 *
b100 .
b100 ,
0-
1#
#220
b110 2
1-
0#
#230
b100 +
b10 )
b10 *
b10 .
b10 ,
0-
1#
#240
b10101 1
1-
0#
#250
b10 +
b100 )
b100 *
b100 .
b100 ,
0-
1#
#260
b111 2
1-
0#
#270
b100 +
b10 )
b10 *
b10 .
b10 ,
0-
1#
#280
b11100 1
1-
0#
#290
b10 +
b100 )
b100 *
b100 .
b100 ,
0-
1#
#300
b1000 2
1-
0#
#310
b100 +
b10 )
b10 *
b10 .
b10 ,
0-
1#
#320
b100100 1
1-
0#
#330
b10 +
b100 )
b100 *
b100 .
b100 ,
0-
1#
#340
b1001 2
1-
0#
#350
b100 +
b10 )
b10 *
b10 .
b10 ,
0-
1#
#360
b101101 1
1-
0#
#370
b10 +
b100 )
b100 *
b100 .
b100 ,
0-
1#
#380
b1010 2
1-
0#
#390
b100 +
b10 )
b10 *
b10 .
b10 ,
0-
1#
#400
b110111 1
1-
0#
#410
b10 +
b100 )
b100 *
b100 .
b100 ,
0-
1#
#420
b1000 +
0'
b1011 2
1-
0#
#430
b110111 !
b110111 (
b110111 0
1"
b1 +
b1000 )
b1000 *
b1000 .
b1000 ,
0-
1#
#440
1-
0#
#450
bz !
bz (
bz 0
0"
b1000 +
b1 )
b1 *
b1 .
b1 ,
0-
1#
#460
b10 +
1'
b1 2
b0 1
b101 3
1-
0#
b101 $
b101 &
b101 /
#470
b100 +
b10 )
b10 *
b10 .
b10 ,
0-
1#
#480
b1 1
1-
0#
#490
b10 +
b100 )
b100 *
b100 .
b100 ,
0-
1#
#500
b10 2
1-
0#
#510
b100 +
b10 )
b10 *
b10 .
b10 ,
0-
1#
#520
b11 1
1-
0#
#530
b10 +
b100 )
b100 *
b100 .
b100 ,
0-
1#
#540
b11 2
1-
0#
#550
b100 +
b10 )
b10 *
b10 .
b10 ,
0-
1#
#560
b110 1
1-
0#
#570
b10 +
b100 )
b100 *
b100 .
b100 ,
0-
1#
#580
b100 2
1-
0#
#590
b100 +
b10 )
b10 *
b10 .
b10 ,
0-
1#
#600
b1010 1
1-
0#
#610
b10 +
b100 )
b100 *
b100 .
b100 ,
0-
1#
#620
b101 2
1-
0#
#630
b100 +
b10 )
b10 *
b10 .
b10 ,
0-
1#
#640
b1111 1
1-
0#
#650
b10 +
b100 )
b100 *
b100 .
b100 ,
0-
1#
#660
b1000 +
0'
b110 2
1-
0#
#670
b1111 !
b1111 (
b1111 0
1"
b1 +
b1000 )
b1000 *
b1000 .
b1000 ,
0-
1#
#680
1-
0#
#690
bz !
bz (
bz 0
0"
b1000 +
b1 )
b1 *
b1 .
b1 ,
0-
1#
#700
b10 +
1'
b1 2
b0 1
1-
0#
